name: Release
on:
  workflow_dispatch:
    inputs:
      version:
        description: "The version to deploy e.g. 'v1.0.1'"
        required: true
        type: string

# env:
#   GH_PACKAGE_TOKEN: ${{ secrets.GH_PACKAGE_TOKEN }}

permissions:
  id-token: write
  contents: read
  checks: write

jobs:
  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    timeout-minutes: ${{ fromJSON(vars.WORKFLOW_TIMEOUT_IN_MINUTES) }}

    steps:
      - uses: actions/checkout@v3
      - name: 'Assume AWS role'
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-region: eu-west-1
          role-to-assume: arn:aws:iam::${{ secrets.PRODUCTION_ACCOUNT_ID }}:role/${{ secrets.AWS_DEPLOY_ROLE }}
      - name: 'Deploy the stack'
        uses: ./.github/actions/terraform
        with:
          workspace: production
          action: apply
          lambda-version: ${{ inputs.version }}
          working-directory: ./terraform

  # update-stack:
  #   name: Update the version in the stack repo
  #   runs-on: ubuntu-latest
  #   timeout-minutes: ${{ fromJSON(vars.WORKFLOW_TIMEOUT_IN_MINUTES) }}
  #   needs: [deploy]

  #   steps:
  #     - uses: actions/checkout@v3
  #       with:
  #         token: ${{ secrets.SEMVER_TOKEN }}
  #     - name: 'Configure git'
  #       run: |
  #         git config --global user.email "59701451+alamy-cicd@users.noreply.github.com"
  #         git config --global user.name "alamy-cicd"
  #     - name: 'Update the workflow files'
  #       run: |
  #         sed -i '/lambda_version/s/".*"/"${{ inputs.version }}"/' terraform/workspaces/production.tfvars
  #     - name: 'Commit'
  #       run: 'git commit -am "chore: update lambda version to ${{ inputs.version }} [skip ci]"'
  #     - name: 'Push'
  #       run: git push

  notify:
    runs-on: ubuntu-latest
    # timeout-minutes: ${{ fromJSON(vars.WORKFLOW_TIMEOUT_IN_MINUTES) }}
    if: always()
    needs: deploy
    steps:
      - name: Send a Notification
        id: notify
        uses: thechetantalwar/teams-notify@v2
        with:
          teams_webhook_url: ${{ secrets.NOTIFICATION_WEBHOOK }}
          message: 'Github Action Build Number ${{ github.run_number }} Completed for ${{ github.repository }} and the outcome is  ${{ needs.deploy.result }}.'
