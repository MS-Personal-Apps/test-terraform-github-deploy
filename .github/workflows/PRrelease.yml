name: PR Release
on: [pull_request]

# env:
#   GH_PACKAGE_TOKEN: ${{ secrets.GH_PACKAGE_TOKEN }}

permissions:
  id-token: write
  contents: read
  checks: write

jobs:
  unit-test:
    name: Unit Test
    # https://github.com/actions/runner/issues/774
    # if: "!contains(github.event.head_commit.message, 'skip ci')"
    runs-on: ubuntu-latest
    timeout-minutes: ${{ fromJSON(vars.WORKFLOW_TIMEOUT_IN_MINUTES) }}

    steps:
      - uses: actions/checkout@v2
      - name: 'Install dependencies'
        uses: ./.github/actions/dependencies
        with:
          node-version: '18.x'
      # - run: npm run lint
      # - run: npm run test

  deploy:
    name: Deploy
    needs: [unit-test]
    runs-on: ubuntu-latest
    # timeout-minutes: ${{ fromJSON(vars.WORKFLOW_TIMEOUT_IN_MINUTES) }}

    steps:
      - uses: actions/checkout@v3
      - name: 'Install dependencies'
        uses: ./.github/actions/dependencies
        with:
          node-version: '18.x'

      - name: Print AWS Secrets
        run: |
          echo "AWS_ACCESS_KEY_ID: ${{ secrets.DEV_ACCOUNT_ID }}"
          echo "AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}"
          echo "AWS_REGION: ${{ secrets.AWS_REGION }}"

      - name: 'Assume AWS role'
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.DEV_ACCOUNT_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

          # role-to-assume: arn:aws:iam::959359076904:role/TerraformRole

      # - name: 'Package and push to S3'
      #   uses: ./.github/actions/package
      #   with:
      #     s3-location: s3://serverless-deployments-alamy-eu-west-1-localdev/bundles/test-terraform-github-deploy/pr-${{ github.event.pull_request.number }}/${{ github.sha }}.zip

      - name: 'Deploy the stack'
        uses: ./.github/actions/terraform
        with:
          workspace: pr-${{ github.event.pull_request.number }}
          action: apply
          lambda-version: ${{ github.sha }}
          working-directory: ./terraform

  # int-test:
  #   name: Test Deployed Lambda
  #   needs: [deploy]
  #   runs-on: ubuntu-latest
  #   timeout-minutes: ${{ fromJSON(vars.WORKFLOW_TIMEOUT_IN_MINUTES) }}

  #   steps:
  #     - uses: actions/checkout@v3
  #     - name: 'Install dependencies'
  #       uses: alamy-ops/github-actions/actions/install-node-dependencies@main
  #       with:
  #         node-version: '18.x'

  #     - name: 'Assume AWS role'
  #       uses: aws-actions/configure-aws-credentials@v1
  #       with:
  #         aws-region: eu-west-1
  #         role-to-assume: arn:aws:iam::${{ secrets.DEV_ACCOUNT_ID }}:role/${{ secrets.AWS_DEPLOY_ROLE }}

  #     - name: Run Tests
  #       run: npm run test:int:ci
  #       env:
  #         LAMBDA_ARN: test-terraform-github-deploy-pr-${{ github.event.pull_request.number }}
  #         TEST_ENV: development

  #     - name: Publish test report
  #       uses: dorny/test-reporter@v1
  #       if: success() || failure()
  #       with:
  #         name: Int test Report
  #         path: reports/junit-int.xml
  #         reporter: jest-junit